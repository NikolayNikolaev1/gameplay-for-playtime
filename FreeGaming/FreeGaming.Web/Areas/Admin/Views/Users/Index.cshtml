@model UserListingViewModel

@{
    ViewData["Title"] = "All Users";
    int counter = 0;
}

<h1>@ViewData["Title"]</h1>
<hr />
<table class="table table-bordered table-hover">
    <tr>
        <th>#</th>
        <th>
            <a asp-area="Admin"
               asp-controller="Users"
               asp-action="Index"
               asp-route-property="Username"
               asp-route-page="@Model.CurrentPage"
               asp-route-order="@(Model.OrderDirection == OrderDirectionType.Ascending ? "Descending" : "Ascending")"
               class="btn btn-lg btn-block">Username</a>
        </th>
        <th>
            <a asp-area="Admin"
               asp-controller="Users"
               asp-action="Index"
               asp-route-property="Email"
               asp-route-order="@(Model.OrderDirection == OrderDirectionType.Ascending ? "Descending" : "Ascending")"
               asp-route-page="@Model.CurrentPage"
               class="btn btn-lg btn-block">Email</a>
        </th>
        <th>
            <a asp-area="Admin"
               asp-controller="Users"
               asp-action="Index"
               asp-route-property="Raiting"
               asp-route-order="@(Model.OrderDirection == OrderDirectionType.Ascending ? "Descending" : "Ascending")"
               asp-route-page="@Model.CurrentPage"
               class="btn btn-lg btn-block">Raiting</a>
        </th>
    </tr>
    @foreach (var user in Model.Users)
    {
        counter++;
        <tr>
            <td>@counter</td>
            <td>@user.UserName</td>
            <td>@user.Email</td>
            <td>@user.Rating</td>
        </tr>
    }
</table>

@(await Html.PartialAsync("_PaginationPartial",
    new ViewDataDictionary(ViewData)
    {
        { "total", Model.TotalUsers },
        { "totalCount", Model.Users.Count()},
        { "currentPage", Model.CurrentPage},
        { "previousPage", Model.PreviousPage },
        { "nextPage", Model.NextPage }
    }))